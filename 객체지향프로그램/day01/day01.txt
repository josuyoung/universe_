자바 - 심우혁
매주 월요일 줌 수업으로 해당주차 과제 문제풀이및 질의응답
화요일 마다 과제 제출

문의 : swing@kw.ac.kr
	https://open.kakao.com/o/g3Hojkyd
과제는 열혈 java 
시험은 쉬운거 40 어려운거 30 매우 어려운거 30
여러 코딩테스트들 쉬운거 접해보기 or c++ 수업듣기

-----------------------------------------------------------------------
jdk.org --> os에 맞게 설치
eclipse 설치 developer버전
자바 컴파일러 = javac.exe
소스파일 		->	클래스파일
소스코드			(바이트코드)

자바는 소스코드를 짜고 컴파일러가 각 운영체제에 맞게 그 위에 jvm이 있어서 개발자들 개발하기 용이하게 함
public static void
(=open 	   반환값 x )
System.out.println = 출력(개행)
..	.print = 개행없이 출력
char = 2바이트 ( 유니코드)
byte = 1바이트
short = 2바이트
int = 4바이트
long = 8바이트

short num1 = 11;
short num2 = 22;
short result = num1 + num2; // error 왜냐하면 연산을 할 때는 4바이트로 형변환후 연산하기에 결과값은
				int형에 받아야한다 !

정수는 int가 default
실수는 double가 default

class OperatePromotion{
	public static void main(string[] args){
		short num1 = 11;
		short num2 = 22;
		short result = num1 + num2;
		system.out.println(result);	// error
	}

}

class CharTypeUnicode {
	public static void main(String[] args) {
		char ch1 = '헐';
		char ch2 = '확';
		char ch3 = 54739;
		char ch4 = 54869;
		char ch5 = 0xD5D0;
		char ch6 = 0xD655;
		System.out.println(ch1 + " " + ch2);
		System.out.println(ch3 + " " + ch4);
		System.out.println(ch5 + " " + ch6);
	}
}

class Boolean {
	public static void main(String args[]){
		boolean b1 = true;
		boolean b2 = false;
		System.out.println(b1);
		System.out.println(b2);

		int num1 = 10;
		int num2= 20;
		System.out.println(num1 < num2);	// boolean값 반환 true
		System.out.println(num1 > num2);	// false



상수와 변수의 차이
a는 아무리 b라고 우겨도 a이니까 상수이다
숫자도 마찬가지 그러나
int a = 2 ; 이것은 a의 값에 여러 값을 넣을 수 있으니 변수인것이다.
그러나 변수를 상수로 초기화 하고 싶다면 한 번 할 수 있다.
final int MAX_SIZE = 100; //대문자로 쓰는게 관례

class Constants {
	public status void main(String[] args){
		final int MAX_SIZE = 100;
		final char CONST_CHAR = "상";
		final int CONST_ASSINGED;

		CONST_ASSINGED = 30;
		System.out.println("상수 :" + MAX_SIZE);
		System.out.println("상수 :" + CONST_CHAR);
		System.out.println("상수 :" + CONTST_ASSINGED);
	}
}
리터럴(Literal)에 대한 이해
int num1 = 5 + 7 //여기서 5와 7은 리터럴 상수이다.
		메모리에는 데이터(클래스,메소드) 스택 힙 구역으로 나뉘는데
		데이터구역에는 literal pool or constant pool이 있는데
		이곳에 리터럴 상수를 기억해놓고 연산할 때 사용


class IntegerLiterals{
	public static void main(String [] args){
		int num1 = 123;	//10진수
		int num2 = 0123;	//8진수
		int num3 = 0x123; //16진수
		
		System.out.println("num1:" +num1);
		System.out.println("num2:" + num2);
		System.out.println("num3:" + num3);

		System.out.println("11+22+33 = " + (11+22+33));
		System.out.println("011 + 022 + 033 =" + (011+022+033));
		System.out.println("0x11 + 0x22 + 0x33 = " + (0x11 + 0x22 + 0x33));
	}
}

 
System.out.println(124152134123412+ 12412341234); // default값은 int임으로 해당값이 더할수 없다

System.out.println(124152134123412L+ 12412341234L); //long형으로 바꿔달라는 의미~

byte seven = 0B111; // : 7 숫자 0과 b

int num = 100_000_000; //콤마대신 사용가능 언더바

System.out.println(124.152134123412D or f+ 124.12341234D or f ); //double형으로 바꿔달라는 뜻 f도 가능


3.4e3	//e뒤에 수는 10의 제곱을 의미
3.4-e3	

한글자는 싱글코텐셜 사용
'한' '글'

double pi = 3.141592;
int wholeNumber = (int)pi;

long num1 = 30000000008L;
int num2 = (int)num1;

short num1 = 1;
short num2 = 2;
short num3 = (short)(num1+num2);
순서: num1과num2를 4바이트로 형변환후 연산 그럼 값은 4바이트에 담긴 
	-> num3은 short자료형 선언 -> 값이 4바이트임으로 들어갈 수 없기에 (short)형변환후 넣기


짜자잔

